{"ast":null,"code":"var _jsxFileName = \"/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/components/typewriter/Typewriter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Typewriter = ({\n  text\n}) => {\n  _s();\n\n  const index = useRef(0);\n  let {\n    prompt\n  } = useRef(0);\n  const [currentText, setCurrentText] = useState(\"\");\n  useEffect(() => {\n    index.current = 0;\n    setCurrentText(\"\");\n  }, [prompt]);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (index.current < text.length) {\n        setCurrentText(value => value + text[prompt].charAt(index.current));\n        prompt += 1;\n      }\n\n      index.current += 1;\n    }, 100);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [currentText, text]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: currentText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Typewriter, \"8OlyIf1UeGYZvsIFo2JVxdCyi2A=\");\n\n_c = Typewriter;\nexport default Typewriter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"sources":["/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/components/typewriter/Typewriter.jsx"],"names":["React","useEffect","useState","useRef","Typewriter","text","index","prompt","currentText","setCurrentText","current","timeoutId","setTimeout","length","value","charAt","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC/B,QAAMC,KAAK,GAAGH,MAAM,CAAC,CAAD,CAApB;AACA,MAAI;AAAEI,IAAAA;AAAF,MAAaJ,MAAM,CAAC,CAAD,CAAvB;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACI,OAAN,GAAgB,CAAhB;AACAD,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHQ,EAGN,CAACF,MAAD,CAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAGC,UAAU,CAAC,MAAM;AACjC,UAAIN,KAAK,CAACI,OAAN,GAAgBL,IAAI,CAACQ,MAAzB,EAAiC;AAC/BJ,QAAAA,cAAc,CAAEK,KAAD,IAAWA,KAAK,GAAGT,IAAI,CAACE,MAAD,CAAJ,CAAaQ,MAAb,CAAoBT,KAAK,CAACI,OAA1B,CAApB,CAAd;AACAH,QAAAA,MAAM,IAAI,CAAV;AACD;;AACDD,MAAAA,KAAK,CAACI,OAAN,IAAiB,CAAjB;AACD,KAN2B,EAMzB,GANyB,CAA5B;AAOA,WAAO,MAAM;AACXM,MAAAA,YAAY,CAACL,SAAD,CAAZ;AACD,KAFD;AAGD,GAXQ,EAWN,CAACH,WAAD,EAAcH,IAAd,CAXM,CAAT;AAYA,sBAAO;AAAA,cAAIG;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;GAAMJ,U;;KAAAA,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst Typewriter = ({ text }) => {\n  const index = useRef(0);\n  let { prompt } = useRef(0);\n\n  const [currentText, setCurrentText] = useState(\"\");\n\n  useEffect(() => {\n    index.current = 0;\n    setCurrentText(\"\");\n  }, [prompt]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (index.current < text.length) {\n        setCurrentText((value) => value + text[prompt].charAt(index.current));\n        prompt += 1;\n      }\n      index.current += 1;\n    }, 100);\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [currentText, text]);\n  return <p>{currentText}</p>;\n};\nexport default Typewriter;\n"]},"metadata":{},"sourceType":"module"}