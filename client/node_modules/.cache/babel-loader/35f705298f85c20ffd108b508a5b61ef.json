{"ast":null,"code":"var _jsxFileName = \"/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/containers/header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Greeting from \"../../components/greeting/Greeting\";\nimport Response from \"../../components/response/Response\";\nimport possibilityImage from \"../../assets/header.svg\";\nimport \"./header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [prompt, setPrompt] = useState({\n    text: \"\"\n  }); // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const configuration = new Configuration({\n  //     // Set up API Key in config for actual project\n  //     apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  //   });\n  //   const openai = new OpenAIApi(configuration);\n  //   for (let i = 0; i < 3; i++) {\n  //     const response = await openai.createCompletion({\n  //       model: \"text-davinci-002\",\n  //       prompt: `${prompt.text}`,\n  //       max_tokens: 15,\n  //     });\n  //     // This is how you access the response from the API\n  //     console.log(response.data.choices[0].text);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gpt3__header gpt3__header-padding\",\n    id: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gpt3__header-content\",\n      children: [/*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gpt3__header-content__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"prompt\",\n          placeholder: \"Enter a prompt\",\n          value: prompt.text,\n          onChange: e => setPrompt({ ...prompt,\n            text: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gpt3__header-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: possibilityImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Response, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"0dFRt4TLcJHVt+sb2TCJWlqa77Q=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/containers/header/Header.jsx"],"names":["React","useState","Greeting","Response","Header","prompt","setPrompt","text","e","target","value","possibilityImage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAGA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAApC,CADmB,CAGnB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAmD,IAAA,EAAE,EAAC,MAAtD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,KAAK,EAAEF,MAAM,CAACE,IAJhB;AAKE,UAAA,QAAQ,EAAGC,CAAD,IAAOF,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaE,YAAAA,IAAI,EAAEC,CAAC,CAACC,MAAF,CAASC;AAA5B,WAAD;AAL5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA5CD;;GAAMP,M;;KAAAA,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Greeting from \"../../components/greeting/Greeting\";\nimport Response from \"../../components/response/Response\";\n\nimport possibilityImage from \"../../assets/header.svg\";\nimport \"./header.css\";\n\nconst Header = () => {\n  const [prompt, setPrompt] = useState({ text: \"\" });\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   const configuration = new Configuration({\n  //     // Set up API Key in config for actual project\n  //     apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  //   });\n\n  //   const openai = new OpenAIApi(configuration);\n  //   for (let i = 0; i < 3; i++) {\n  //     const response = await openai.createCompletion({\n  //       model: \"text-davinci-002\",\n  //       prompt: `${prompt.text}`,\n  //       max_tokens: 15,\n  //     });\n  //     // This is how you access the response from the API\n  //     console.log(response.data.choices[0].text);\n  //   }\n  // };\n  return (\n    <div className=\"gpt3__header gpt3__header-padding\" id=\"home\">\n      <div className=\"gpt3__header-content\">\n        <Greeting />\n        <div className=\"gpt3__header-content__input\" />\n        <form autoComplete=\"off\">\n          <input\n            type=\"text\"\n            name=\"prompt\"\n            placeholder=\"Enter a prompt\"\n            value={prompt.text}\n            onChange={(e) => setPrompt({ ...prompt, text: e.target.value })}\n          />\n        </form>\n      </div>\n\n      <div className=\"gpt3__header-image\">\n        <img src={possibilityImage} />\n        <Response />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}