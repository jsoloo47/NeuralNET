{"ast":null,"code":"var _jsxFileName = \"/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/containers/header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Greeting from \"../../components/greeting/Greeting\";\nimport Response from \"../../components/response/Response\";\nimport possibilityImage from \"../../assets/header.svg\";\nimport \"./header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [prompt, setPrompt] = useState({\n    text: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const configuration = new Configuration({\n      // Set up API Key in config for actual project\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY\n    });\n    const openai = new OpenAIApi(configuration);\n\n    for (let i = 0; i < 3; i++) {\n      const response = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: `${prompt.text}`,\n        max_tokens: 15\n      }); // This is how you access the response from the API\n\n      console.log(response.data.choices[0].text);\n    }\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: \"gpt3__header gpt3__header-padding\",\n    id: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gpt3__header-content\",\n      children: [/*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gpt3__header-content__input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gpt3__header-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: possibilityImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Response, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Header, \"0dFRt4TLcJHVt+sb2TCJWlqa77Q=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/containers/header/Header.jsx"],"names":["React","Greeting","Response","Header","prompt","setPrompt","useState","text","handleSubmit","e","preventDefault","configuration","Configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","OpenAIApi","i","response","createCompletion","model","max_tokens","console","log","data","choices","possibilityImage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAApC;;AAEA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,aAAa,GAAG,IAAIC,aAAJ,CAAkB;AACtC;AACAC,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFkB,KAAlB,CAAtB;AAKA,UAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAcP,aAAd,CAAf;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,gBAAP,CAAwB;AAC7CC,QAAAA,KAAK,EAAE,kBADsC;AAE7ClB,QAAAA,MAAM,EAAG,GAAEA,MAAM,CAACG,IAAK,EAFsB;AAG7CgB,QAAAA,UAAU,EAAE;AAHiC,OAAxB,CAAvB,CAD0B,CAM1B;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBpB,IAArC;AACD;AACF,GAlBD;;AAmBA;AAAA;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAmD,IAAA,EAAE,EAAC,MAAtD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEqB;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAWD,CAjCD;;GAAMzB,M;;KAAAA,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport Greeting from \"../../components/greeting/Greeting\";\nimport Response from \"../../components/response/Response\";\nimport possibilityImage from \"../../assets/header.svg\";\nimport \"./header.css\";\n\nconst Header = () => {\n  const [prompt, setPrompt] = useState({ text: \"\" });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const configuration = new Configuration({\n      // Set up API Key in config for actual project\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    });\n\n    const openai = new OpenAIApi(configuration);\n    for (let i = 0; i < 3; i++) {\n      const response = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: `${prompt.text}`,\n        max_tokens: 15,\n      });\n      // This is how you access the response from the API\n      console.log(response.data.choices[0].text);\n    }\n  };\n  <div className=\"gpt3__header gpt3__header-padding\" id=\"home\">\n    <div className=\"gpt3__header-content\">\n      <Greeting />\n      <div className=\"gpt3__header-content__input\" />\n    </div>\n\n    <div className=\"gpt3__header-image\">\n      <img src={possibilityImage} />\n      <Response />\n    </div>\n  </div>;\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}