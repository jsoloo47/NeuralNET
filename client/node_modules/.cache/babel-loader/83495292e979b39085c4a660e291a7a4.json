{"ast":null,"code":"var _jsxFileName = \"/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/components/typewriter/Typewriter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Typewriter = ({\n  text\n}) => {\n  _s();\n\n  const index = useRef(0);\n  const char = useRef(0);\n  const [currentText, setCurrentText] = useState(\"\"); // Reset the index in text to loop through the next prompt\n\n  useEffect(() => {\n    index.current = 0;\n    setCurrentText(\"\");\n    console.log(\"index set to 0\");\n  }, [index.current]);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (char.current < text[index.current].length) {\n        setCurrentText(value => value + text[char.current]);\n        char.current += 1;\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeoutId);\n      index.current += 1;\n    };\n  }, [currentText, index.current]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: currentText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Typewriter, \"y/xHHSL7fqU2w28T1Gpn1blWSAo=\");\n\n_c = Typewriter;\nexport default Typewriter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typewriter\");","map":{"version":3,"sources":["/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/components/typewriter/Typewriter.jsx"],"names":["React","useEffect","useState","useRef","Typewriter","text","index","char","currentText","setCurrentText","current","console","log","timeoutId","setTimeout","length","value","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC/B,QAAMC,KAAK,GAAGH,MAAM,CAAC,CAAD,CAApB;AACA,QAAMI,IAAI,GAAGJ,MAAM,CAAC,CAAD,CAAnB;AAEA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAJ+B,CAM/B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACI,OAAN,GAAgB,CAAhB;AACAD,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAJQ,EAIN,CAACN,KAAK,CAACI,OAAP,CAJM,CAAT;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAGC,UAAU,CAAC,MAAM;AACjC,UAAIP,IAAI,CAACG,OAAL,GAAeL,IAAI,CAACC,KAAK,CAACI,OAAP,CAAJ,CAAoBK,MAAvC,EAA+C;AAC7CN,QAAAA,cAAc,CAAEO,KAAD,IAAWA,KAAK,GAAGX,IAAI,CAACE,IAAI,CAACG,OAAN,CAAxB,CAAd;AACAH,QAAAA,IAAI,CAACG,OAAL,IAAgB,CAAhB;AACD;AACF,KAL2B,EAKzB,GALyB,CAA5B;AAMA,WAAO,MAAM;AACXO,MAAAA,YAAY,CAACJ,SAAD,CAAZ;AACAP,MAAAA,KAAK,CAACI,OAAN,IAAiB,CAAjB;AACD,KAHD;AAID,GAXQ,EAWN,CAACF,WAAD,EAAcF,KAAK,CAACI,OAApB,CAXM,CAAT;AAYA,sBAAO;AAAA,cAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1BD;;GAAMJ,U;;KAAAA,U;AA2BN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst Typewriter = ({ text }) => {\n  const index = useRef(0);\n  const char = useRef(0);\n\n  const [currentText, setCurrentText] = useState(\"\");\n\n  // Reset the index in text to loop through the next prompt\n  useEffect(() => {\n    index.current = 0;\n    setCurrentText(\"\");\n    console.log(\"index set to 0\");\n  }, [index.current]);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (char.current < text[index.current].length) {\n        setCurrentText((value) => value + text[char.current]);\n        char.current += 1;\n      }\n    }, 100);\n    return () => {\n      clearTimeout(timeoutId);\n      index.current += 1;\n    };\n  }, [currentText, index.current]);\n  return <p>{currentText}</p>;\n};\nexport default Typewriter;\n"]},"metadata":{},"sourceType":"module"}