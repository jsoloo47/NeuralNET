{"ast":null,"code":"var _jsxFileName = \"/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/components/prompt/Prompt.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./prompt.css\";\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-await-in-loop */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Prompt() {\n  _s();\n\n  const [prompt, setPrompt] = useState({\n    text: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const configuration = new Configuration({\n      // Set up API Key in config for actual project\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY\n    });\n    const openai = new OpenAIApi(configuration);\n\n    for (let i = 0; i < 3; i++) {\n      const response = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: `${prompt.text}`,\n        max_tokens: 15\n      }); // This is how you access the response from the API\n\n      console.log(response.data.choices[0].text);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      children: [\"value=\", prompt.text, \"onChange=\", e => setPrompt({ ...prompt,\n        text: e.target.value\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Magic Stuff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Prompt, \"0dFRt4TLcJHVt+sb2TCJWlqa77Q=\");\n\n_c = Prompt;\nexport default Prompt;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prompt\");","map":{"version":3,"sources":["/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/src/components/prompt/Prompt.jsx"],"names":["React","useState","Configuration","OpenAIApi","Prompt","prompt","setPrompt","text","handleSubmit","e","preventDefault","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","i","response","createCompletion","model","max_tokens","console","log","data","choices","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,QAAzC;AACA,OAAO,cAAP;AACA;;AACA;;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAApC;;AAEA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,aAAa,GAAG,IAAIT,aAAJ,CAAkB;AACtC;AACAU,MAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFkB,KAAlB,CAAtB;AAKA,UAAMC,MAAM,GAAG,IAAIb,SAAJ,CAAcQ,aAAd,CAAf;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,gBAAP,CAAwB;AAC7CC,QAAAA,KAAK,EAAE,kBADsC;AAE7Cf,QAAAA,MAAM,EAAG,GAAEA,MAAM,CAACE,IAAK,EAFsB;AAG7Cc,QAAAA,UAAU,EAAE;AAHiC,OAAxB,CAAvB,CAD0B,CAM1B;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBlB,IAArC;AACD;AACF,GAlBD;;AAoBA,sBACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEC,YAAnC;AAAA,4BACE;AAAA,2BACSH,MAAM,CAACE,IADhB,eAEaE,CAAD,IAAOH,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaE,QAAAA,IAAI,EAAEE,CAAC,CAACiB,MAAF,CAASC;AAA5B,OAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhCQvB,M;;KAAAA,M;AAiCT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./prompt.css\";\n/* eslint-disable no-plusplus */\n/* eslint-disable no-await-in-loop */\nfunction Prompt() {\n  const [prompt, setPrompt] = useState({ text: \"\" });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const configuration = new Configuration({\n      // Set up API Key in config for actual project\n      apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    });\n\n    const openai = new OpenAIApi(configuration);\n    for (let i = 0; i < 3; i++) {\n      const response = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: `${prompt.text}`,\n        max_tokens: 15,\n      });\n      // This is how you access the response from the API\n      console.log(response.data.choices[0].text);\n    }\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <textarea>\n        value={prompt.text}\n        onChange={(e) => setPrompt({ ...prompt, text: e.target.value })}\n      </textarea>\n      <button type=\"submit\">Magic Stuff</button>\n    </form>\n  );\n}\nexport default Prompt;\n"]},"metadata":{},"sourceType":"module"}