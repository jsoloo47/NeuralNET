{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('@motionone/utils');\n\nvar featureDetection = require('./feature-detection.cjs.js'); // Create a linear easing point for every x second\n\n\nconst resolution = 0.015;\n\nconst generateLinearEasingPoints = (easing, duration) => {\n  let points = \"\";\n  const numPoints = Math.round(duration / resolution);\n\n  for (let i = 0; i < numPoints; i++) {\n    points += easing(utils.progress(0, numPoints - 1, i)) + \", \";\n  }\n\n  return points.substring(0, points.length - 2);\n};\n\nconst convertEasing = (easing, duration) => {\n  if (utils.isFunction(easing)) {\n    return featureDetection.supports.linearEasing() ? `linear(${generateLinearEasingPoints(easing, duration)})` : utils.defaults.easing;\n  } else {\n    return utils.isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n  }\n};\n\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexports.convertEasing = convertEasing;\nexports.cubicBezierAsString = cubicBezierAsString;\nexports.generateLinearEasingPoints = generateLinearEasingPoints;","map":{"version":3,"sources":["/Users/juansolano/Desktop/Portfolio/Learning-Projects/gpt3-development/node_modules/@motionone/dom/dist/animate/utils/easing.cjs.js"],"names":["Object","defineProperty","exports","value","utils","require","featureDetection","resolution","generateLinearEasingPoints","easing","duration","points","numPoints","Math","round","i","progress","substring","length","convertEasing","isFunction","supports","linearEasing","defaults","isCubicBezier","cubicBezierAsString","a","b","c","d"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,4BAAD,CAA9B,C,CAEA;;;AACA,MAAME,UAAU,GAAG,KAAnB;;AACA,MAAMC,0BAA0B,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACrD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAGH,UAAtB,CAAlB;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAChCJ,IAAAA,MAAM,IAAIF,MAAM,CAACL,KAAK,CAACY,QAAN,CAAe,CAAf,EAAkBJ,SAAS,GAAG,CAA9B,EAAiCG,CAAjC,CAAD,CAAN,GAA8C,IAAxD;AACH;;AACD,SAAOJ,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBN,MAAM,CAACO,MAAP,GAAgB,CAApC,CAAP;AACH,CAPD;;AAQA,MAAMC,aAAa,GAAG,CAACV,MAAD,EAASC,QAAT,KAAsB;AACxC,MAAIN,KAAK,CAACgB,UAAN,CAAiBX,MAAjB,CAAJ,EAA8B;AAC1B,WAAOH,gBAAgB,CAACe,QAAjB,CAA0BC,YAA1B,KACA,UAASd,0BAA0B,CAACC,MAAD,EAASC,QAAT,CAAmB,GADtD,GAEDN,KAAK,CAACmB,QAAN,CAAed,MAFrB;AAGH,GAJD,MAKK;AACD,WAAOL,KAAK,CAACoB,aAAN,CAAoBf,MAApB,IAA8BgB,mBAAmB,CAAChB,MAAD,CAAjD,GAA4DA,MAAnE;AACH;AACJ,CATD;;AAUA,MAAMgB,mBAAmB,GAAG,CAAC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAD,KAAmB,gBAAeH,CAAE,KAAIC,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAlF;;AAEA3B,OAAO,CAACiB,aAAR,GAAwBA,aAAxB;AACAjB,OAAO,CAACuB,mBAAR,GAA8BA,mBAA9B;AACAvB,OAAO,CAACM,0BAAR,GAAqCA,0BAArC","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\nvar featureDetection = require('./feature-detection.cjs.js');\n\n// Create a linear easing point for every x second\nconst resolution = 0.015;\nconst generateLinearEasingPoints = (easing, duration) => {\n    let points = \"\";\n    const numPoints = Math.round(duration / resolution);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(utils.progress(0, numPoints - 1, i)) + \", \";\n    }\n    return points.substring(0, points.length - 2);\n};\nconst convertEasing = (easing, duration) => {\n    if (utils.isFunction(easing)) {\n        return featureDetection.supports.linearEasing()\n            ? `linear(${generateLinearEasingPoints(easing, duration)})`\n            : utils.defaults.easing;\n    }\n    else {\n        return utils.isCubicBezier(easing) ? cubicBezierAsString(easing) : easing;\n    }\n};\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexports.convertEasing = convertEasing;\nexports.cubicBezierAsString = cubicBezierAsString;\nexports.generateLinearEasingPoints = generateLinearEasingPoints;\n"]},"metadata":{},"sourceType":"script"}